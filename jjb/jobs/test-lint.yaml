- job:
    name: "test-lint"
    description: "lint"
    defaults: global
    parameters:
      - label:
          name: SLAVE
      - string:
          name: PIPELINE_NAME
    wrappers:
      - workspace-cleanup
      - timestamps
      - credentials-binding:
        - ssh-user-private-key:
            credential-id: worker
            key-file-variable: WORKER_SSH_KEY
            username-variable: WORKER_USER_NAME
            passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
        - ssh-user-private-key:
            credential-id: logs_host
            key-file-variable: LOGS_HOST_SSH_KEY
            username-variable: LOGS_HOST_USERNAME
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,test-lint.env"
          which-build: upstream-build
          optional: true
      - shell: |
          number=$(curl -s $BUILD_URL/api/json | jq -r .actions[0].causes[0].upstreamBuild)
          desc="Pipeline: ${PIPELINE_NAME}-$number"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          # TODO: copy or commonize code with test-unit
          echo "Run lint"
    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                - SUCCESS
                - FAILURE
                - ABORTED
                - NOT_BUILT
                - UNSTABLE
              build-steps:
                - shell: |
                    source "$WORKSPACE/global.env"
                    ## Commented out prior to lint implementation
                    # export FULL_LOGS_PATH="${LOGS_PATH}/lint"
                    # Here must be run.sh | tee ${WORKSPACE}/output-lint.log || res=1
                    # ssh -i $LOGS_HOST_SSH_KEY $SSH_OPTIONS $LOGS_HOST_USERNAME@$LOGS_HOST "mkdir -p $FULL_LOGS_PATH"
                    # rsync -a -e "ssh -i ${LOGS_HOST_SSH_KEY} ${SSH_OPTIONS}" ${WORKSPACE}/output-lint.log ${LOGS_HOST_USERNAME}@${LOGS_HOST}:${FULL_LOGS_PATH}
          
                    # ./src/progmaticlab/tf-jenkins/infra/${SLAVE}/remove_workers.sh
