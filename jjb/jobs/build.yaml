- job:
    name: "build"
    description: "build"
    defaults: global
    scm:
      - tf-jenkins
      - tf-dev-env
    parameters:
      - label:
          name: SLAVE
      - string:
          name: PIPELINE_NAME
    wrappers:
      - workspace-cleanup
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - amazon-web-services:
              credential-id: aws-creds
              access-key: AWS_ACCESS_KEY_ID
              secret-key: AWS_SECRET_ACCESS_KEY
      - credentials-binding:
          - text:
              credential-id: VEXX_OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: VEXX_OS_PROJECT_NAME
              variable: OS_PROJECT_NAME
          - text:
              credential-id: VEXX_OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: VEXX_OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: VEXX_OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: VEXX_OS_AUTH_URL
              variable: OS_AUTH_URL
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: logs_host
              key-file-variable: LOGS_HOST_SSH_KEY
              username-variable: LOGS_HOST_USERNAME
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,build.env"
          which-build: upstream-build
          optional: true
      - shell: |
          number=$(curl -s $BUILD_URL/api/json | jq -r .actions[0].causes[0].upstreamBuild)
          source "$WORKSPACE/global.env"
          desc="Pipeline: ${PIPELINE_NAME}-$number<br>Job logs: <a href="${LOGS_URL}/build">${LOGS_URL}/build</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          # TODO: set OS to rhel for rhel builds
          export DEBUG=true
          export ENVIRONMENT_OS=centos7
          source "$WORKSPACE/global.env"
          ./src/progmaticlab/tf-jenkins/jobs/build/create_workers.sh
      - shell: |
          set +e
          set -o pipefail
          export DEBUG=true
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/stackrc.$JOB_NAME.env"
          source ./src/progmaticlab/tf-jenkins/infra/${SLAVE}/definitions
          export FULL_LOGS_PATH="${LOGS_PATH}/build"
          # main run
          ./src/progmaticlab/tf-jenkins/jobs/build/run.sh |& tee ${WORKSPACE}/output.log || res=1
          # collect logs
          ssh -i $LOGS_HOST_SSH_KEY $SSH_OPTIONS $LOGS_HOST_USERNAME@$LOGS_HOST "mkdir -p $FULL_LOGS_PATH"
          rsync -a -e "ssh -i ${LOGS_HOST_SSH_KEY} ${SSH_OPTIONS}" ${WORKSPACE}/output.log ${LOGS_HOST_USERNAME}@${LOGS_HOST}:${FULL_LOGS_PATH}
          ./src/progmaticlab/tf-jenkins/jobs/build/collect_logs.sh
          exit $res
    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                  - SUCCESS
                  - FAILURE
                  - ABORTED
                  - NOT_BUILT
                  - UNSTABLE
              build-steps:
                  - shell: |
                      source "$WORKSPACE/global.env"
                      ./src/progmaticlab/tf-jenkins/infra/${SLAVE}/remove_workers.sh
